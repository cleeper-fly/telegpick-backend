version: '3.7'

services:
  rabbitmq:
    image: rabbitmq:3.11.9-management
    profiles: ['all']
    env_file:
     - ./.env
    healthcheck:
      test: sleep 1

  redis:
    image: redis:7
    profiles: ['all']

  flower:
    image: mher/flower:0.9.5
    command:  flower --address=0.0.0.0 --port=5555 --broker=$CELERY_BROKER_URL --broker_api=$FLOWER_BROKER_API_URL
    env_file:
      - ./.env
    ports:
      - 5555:5555

  db:
    image: edoburu/pgbouncer:latest
    env_file:
     - ./.db.env
    volumes:
      - ./db/userlist.txt:/etc/pgbouncer/userlist.txt
    ports:
      - '5432:5432'
    restart: always
    depends_on:
      - postgres
    profiles: ['all']

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
     - PGADMIN_DEFAULT_EMAIL=kek@kek.kek
     - PGADMIN_DEFAULT_PASSWORD=-
    profiles: ['all', 'pgadmin']
    ports:
     - '11086:80'

  postgres:
    image: postgres:14
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - '5432'
    expose:
      - "5432"
    env_file:
      - ./.db.env
    command: ["-c", "max_connections=100"]
    profiles: ['all']

  backend-app:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile
    env_file:
      - ./.env
    restart: unless-stopped
    entrypoint: /start.sh
    profiles: ['all', 'backend']
    ports:
      - '11084:80'
    volumes:
      - ./pics:/opt/pics
      - ./sessions:/opt/sessions/
    depends_on:
      - db

  worker:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile
    env_file:
      - ./.env
    depends_on:
      - rabbitmq
      - redis
      - backend-app
    volumes:
      - ./pics:/opt/pics
      - ./sessions:/opt/sessions/
    profiles: ['all', 'backend']
    entrypoint: "celery -A app.core.celery_app worker -B -Q main-queue -l info -c 3 -E"

  beat:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile
    entrypoint: "celery -A app.core.celery_app beat -l info"
    env_file:
      - ./.env
    depends_on:
      - rabbitmq
      - redis
      - backend-app
    profiles: ['all', 'backend']
    volumes:
      - ./pics:/opt/pics
      - ./sessions:/opt/sessions/

volumes:
  pg_data:
